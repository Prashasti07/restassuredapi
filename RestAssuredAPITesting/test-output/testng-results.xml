<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="25" passed="21" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-01-14T14:54:58 IST" name="Suite" finished-at="2020-01-14T14:55:09 IST" duration-ms="10835">
    <groups>
    </groups>
    <test started-at="2020-01-14T14:54:58 IST" name="Test" finished-at="2020-01-14T14:55:09 IST" duration-ms="10835">
      <class name="com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord">
        <test-method is-config="true" signature="deleteEmployeeRecord()[pri:0, instance:com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord@290d210d]" started-at="2020-01-14T14:55:07 IST" name="deleteEmployeeRecord" finished-at="2020-01-14T14:55:09 IST" duration-ms="1881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployeeRecord -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord@290d210d]" started-at="2020-01-14T14:55:07 IST" name="setUp" finished-at="2020-01-14T14:55:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord@290d210d]" started-at="2020-01-14T14:55:09 IST" name="checkResponseBody" finished-at="2020-01-14T14:55:09 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<false> but was:<true>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<false> but was:<true>
at org.testng.AssertJUnit.fail(AssertJUnit.java:47)
at org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:330)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:66)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:161)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:166)
at com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord.checkResponseBody(TC005_DeleteEmloyeeRecord.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord@290d210d]" started-at="2020-01-14T14:55:09 IST" name="tearDown" finished-at="2020-01-14T14:55:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord@290d210d]" started-at="2020-01-14T14:55:09 IST" name="checkStatusCode" finished-at="2020-01-14T14:55:09 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<404> but was:<200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<404> but was:<200>
at org.testng.AssertJUnit.fail(AssertJUnit.java:47)
at org.testng.AssertJUnit.failNotEquals(AssertJUnit.java:330)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:66)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:213)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:218)
at com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord.checkStatusCode(TC005_DeleteEmloyeeRecord.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord@290d210d]" started-at="2020-01-14T14:55:09 IST" name="tearDown" finished-at="2020-01-14T14:55:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord@290d210d]" started-at="2020-01-14T14:55:09 IST" name="tearDown" finished-at="2020-01-14T14:55:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCases.TC005_DeleteEmloyeeRecord -->
      <class name="com.employeeapi.TestCases.TC004_PutEmployeeRecord">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:54:59 IST" name="setUp" finished-at="2020-01-14T14:54:59 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="updateEmployeeRecord()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:54:59 IST" name="updateEmployeeRecord" finished-at="2020-01-14T14:55:05 IST" duration-ms="6103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateEmployeeRecord -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="checkContentType" finished-at="2020-01-14T14:55:05 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="tearDown" finished-at="2020-01-14T14:55:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="checkResponseBody" finished-at="2020-01-14T14:55:05 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:47)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:20)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:26)
at com.employeeapi.TestCases.TC004_PutEmployeeRecord.checkResponseBody(TC004_PutEmployeeRecord.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="tearDown" finished-at="2020-01-14T14:55:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="checkServerType" finished-at="2020-01-14T14:55:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="tearDown" finished-at="2020-01-14T14:55:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="checkStatusCode" finished-at="2020-01-14T14:55:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="tearDown" finished-at="2020-01-14T14:55:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC004_PutEmployeeRecord@add0edd]" started-at="2020-01-14T14:55:05 IST" name="tearDown" finished-at="2020-01-14T14:55:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCases.TC004_PutEmployeeRecord -->
      <class name="com.employeeapi.TestCases.TC003_PostEmployeeRecord">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="setUp" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="createEmployeeRecord()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="createEmployeeRecord" finished-at="2020-01-14T14:55:06 IST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployeeRecord -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="checkContentType" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="checkResponseBody" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="checkServerType" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="checkStatusCode" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC003_PostEmployeeRecord@7ea37dbf]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCases.TC003_PostEmployeeRecord -->
      <class name="com.employeeapi.TestCases.TC001_GetAllEmployees">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:06 IST" name="setUp" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:06 IST" name="getAllEmployees" finished-at="2020-01-14T14:55:07 IST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkContentEncoding" finished-at="2020-01-14T14:55:07 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkContentLength" finished-at="2020-01-14T14:55:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkContentType" finished-at="2020-01-14T14:55:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkCookies()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkCookies" finished-at="2020-01-14T14:55:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCookies -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseBody()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkResponseBody" finished-at="2020-01-14T14:55:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkResponseTime" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkServerType" finished-at="2020-01-14T14:55:07 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkStatusCode" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="checkStatusLine" finished-at="2020-01-14T14:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:07 IST" name="tearDown" finished-at="2020-01-14T14:55:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC001_GetAllEmployees@4b44655e]" started-at="2020-01-14T14:55:09 IST" name="tearDown" finished-at="2020-01-14T14:55:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCases.TC001_GetAllEmployees -->
      <class name="com.employeeapi.TestCases.TC002_GetSingleEmployeeData">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:05 IST" name="setUp" finished-at="2020-01-14T14:55:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getSingleEmployeeData()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:05 IST" name="getSingleEmployeeData" finished-at="2020-01-14T14:55:06 IST" duration-ms="846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSingleEmployeeData -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="checkContentLength" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="checkContentType" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<text/html; charset=UTF-8> but was:<application/json;charset=utf-8>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<text/html; charset=UTF-8> but was:<application/json;charset=utf-8>
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:82)
at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:87)
at com.employeeapi.TestCases.TC002_GetSingleEmployeeData.checkContentType(TC002_GetSingleEmployeeData.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="checkResponseTime" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="checkServerType" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="checkStatusCode" finished-at="2020-01-14T14:55:06 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.employeeapi.TestCases.TC002_GetSingleEmployeeData@2aa3cd93]" started-at="2020-01-14T14:55:06 IST" name="tearDown" finished-at="2020-01-14T14:55:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.employeeapi.TestCases.TC002_GetSingleEmployeeData -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
